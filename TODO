##TODO

- Tests - What is the preferred way? testthat?
- Check the values of the parameters in the query are valid.
- Consider using explicit function parameters to mirror the API parameters
   e.g. unitOfMeasure = 'E', ...
  rather than using ...
  (unitOfMeasure explicitly added to CIMISweather())
  There are only 7 of these and 4 are directly supported (appKey, start, end, unitOfMeasure)
- Additional API functionality
    http://et.water.ca.gov/api/stationzipcode/<zip>
    http://et.water.ca.gov/api/spatialzipcode
    http://et.water.ca.gov/api/spatialzipcode/<zip>
- Raise API-specific errors/exceptions based on the table in the API documentation
  e.g.  ERR1006  INVALID APP KEY
   so rais a condition/error of class "INVALID APP KEY".
- Change get_station_info() to update_station_info(), bundle station info with package (similar to valid_opts), but allow user to easily update
- Include function to return nearest station and distance from lat/lon (Matt has code to do this)
- Fix check_data_items: currently will not work with no dataItems, or with supplied dataItems


DONE(ish)
- Write documentation
- Add examples
- Fill in DESCRIPTION and NAMESPACE
